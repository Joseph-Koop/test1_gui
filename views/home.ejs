<!-- home.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Page</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<body>
    <h1 class="bp2">Task Management Project</h1>

    <div class="task-list bm bp">
        <div class="task-list-inner-block bp">
            <div class="command-header">
                <div>
                    <!-- Button to toggle the Add Task form -->
                    <button class="bm button" onclick="openAddForm()">Add New</button>
                    <div>
                        <!-- Form to add a new task -->
                        <form id="add-form" class="add-form hide">
                            <div class="label-input">
                                <label for="title">Title: </label>
                                <input type="text" name="title" id="add-title" required/>

                                <label for="description">Description: </label>
                                <input type="text" name="description" id="add-description"/>

                                <label for="priority">Priority Level: </label>
                                <select name="priority" id="add-priority">
                                    <option value=1>High</option>
                                    <option value=2 selected>Medium</option>
                                    <option value=3>Low</option>
                                </select>
                            </div>
                            <div class="button-center">
                                <button type="submit">Submit</button>
                                <button type="button" onclick="closeForms()">Cancel</button>
                            </div>
                        </form>
                    </div>
                    <div>
                        <!-- Form to edit a new task -->
                        <form id="edit-form" class="edit-form hide">
                            <div class="label-input">
                                <input id="edit-task-id" type="number" hidden/>
                                <label for="title">Title: </label>
                                <input type="text" name="title" id="edit-title" required/>

                                <label for="description">Description: </label>
                                <input type="text" name="description" id="edit-description" required/>

                                <label for="priority">Priority Level: </label>
                                <select name="priority" id="edit-priority">
                                    <option value=1>High</option>
                                    <option value=2 selected>Medium</option>
                                    <option value=3>Low</option>
                                </select>
                            </div>
                            <div class="button-center">
                                <button type="submit">Submit</button>
                                <button type="button" onclick="closeForms()">Cancel</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Table headers for the task list -->
            <div class="task-heading" data-tasks='<%= JSON.stringify(tasks) %>'>
                <p class="column-name">ID</p>
                <p class="column-name">Title</p>
                <p class="column-name">Description</p>
                <p class="column-name">Priority</p>
                <p class="column-name">Status</p>
                <p class="column-name">Action</p>
            </div>
            
            <div id="task-container">
                <% tasks.forEach(task => { %>
                    <div id="task-row-<%= task.id %>" class="task-info
                    <%= task.completed ? 'strike' : '' %>">
                        <p><%= task.id %></p>
                        <p><%= task.title %></p>
                        <p><%= task.description %></p>
                
                        <!-- Display priority level based on task priority value -->
                        <% if(task.priority == 1) { %>
                            <p>High</p>
                        <% } else if(task.priority == 2) { %>
                            <p>Medium</p>
                        <% } else { %>
                            <p>Low</p>
                        <% } %>
                
                        <!-- Display task status -->
                        <% if(task.completed) { %>
                            <p class="compen">Completed</p>
                        <% } else { %>
                            <p class="compen">Pending</p>
                        <% } %>
                
                        <!-- Action buttons to toggle task completion and delete task -->
                        <form class="tr toggle-form" data-task-id="<%= task.id %>">
                            <button class="icon-link" type="submit"><span class="material-icons" style="color: #28a745;">check_circle</span></button>
                        </form>
                        <div class="tr">
                            <button data-task-id="<%= task.id %>" data-title="<%= task.title %>" data-description="<%= task.description %>" data-priority="<%= task.priority %>" class="icon-link" type="button" onclick="openEditForm(this)"><span class="material-icons" style="color: #ecd609;;">edit</span></button>
                        </div>
                        <form class="tr delete-form" data-task-id="<%= task.id %>">
                            <button class="icon-link" type="submit"><span class="material-icons" style="color: #ee0909;">delete</span></button>
                        </form>
                    </div>
                <% }); %>
            </div>
            <div class="bm2" id="response-message"></div>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        function openAddForm(){
            $("#add-form").removeClass("hide");
            $("#edit-form").addClass("hide");
        }

        function openEditForm(button){
            $("#add-form").addClass("hide");
            $("#edit-form").removeClass("hide");

            const taskId = $(button).data('task-id');               //struggled to access the tasks in javascript
            const taskTitle = $(button).data('title');
            const taskDescription = $(button).data('description');
            const taskPriority = $(button).data('priority');
            $("#edit-task-id").val(taskId);
            $("#edit-title").val(taskTitle);
            $("#edit-description").val(taskDescription);
            $("#edit-priority option").each( function(index){
                if(taskPriority == index + 1){
                    $(this).prop("selected", true);
                }else{
                    $(this).prop("selected", false);
                }
            });
        }

        function closeForms(){
            $("#add-form").addClass("hide");
            $("#edit-form").addClass("hide");
            $("form input").each( function(){
                $(this).val("");
            });
        }

        function compileTask(id, title, description, priority){
            let newTask = `
                <div id="task-row-${id}" class="task-info">
                    <p>${id}</p>
                    <p>${title}</p>
                    <p>${description}</p>`
                    
            if(priority == 1){
                newTask += '<p>High</p>';
            }else if(priority == 2){
                newTask += '<p>Medium</p>';
            }else{
                newTask += '<p>Low</p>';
            }

            newTask += `
                    <p class="compen">Pending</p>
            
                    <form class="tr toggle-form" data-task-id="${id}">
                        <button class="icon-link" type="submit"><span class="material-icons" style="color: #28a745;">check_circle</span></button>
                    </form>
                    <div class="tr">
                        <button data-task-id="${id}" data-title="${title}" data-description="${description}" data-priority="${priority}" class="icon-link" type="button" onclick="openEditForm(this)"><span class="material-icons" style="color: #ecd609;;">edit</span></button>
                    </div>
                    <form class="tr delete-form" data-task-id="${id}">
                        <button class="icon-link" type="submit"><span class="material-icons" style="color: #ee0909;">delete</span></button>
                    </form>
                </div>`

            return newTask;
        }

        $(document).ready(function(){   
            $('#response-message').html("").removeClass('success').removeClass('error');

            $('#add-form').submit( function (e){
                e.preventDefault();
                const formData = {
                    title: $('#add-title').val(),
                    description: $('#add-description').val(),
                    priority: $('#add-priority').val()
                };
                $.ajax({
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    url: '/add-task',
                    data: JSON.stringify(formData),
                    dataType: "json",
                    beforeSend(){},
                    success: function(data){
                        if(data.err){
                            $('#response-message').html(data.err).addClass('error').removeClass('success');
                            return;
                        }
                        $('#response-message').html(`Added Task ${data.res.title}`).addClass('success').removeClass('error');
                        let newTask = compileTask(data.res.id, data.res.title, data.res.description, data.res.priority);
                        $(`#task-container`).append(newTask);
                        closeForms();
                    },
                    error: function(xhr, status, err){
                        let errorMessage = "An error occurred. ";
                        if(xhr.responseJSON) errorMessage += xhr.responseJSON;
                        if(xhr.responseText) errorMessage += xhr.responseText;
                        $('#response-message').html(errorMessage).addClass('error').removeClass('success');
                    }
                });
            });

            $(document).on('submit', '.edit-form', function (e){
                e.preventDefault();
                const taskId = $('#edit-task-id').val();
                const formData = {
                    id: taskId,
                    title: $('#edit-title').val(),
                    description: $('#edit-description').val(),
                    priority: $('#edit-priority').val()
                };
                console.log(formData);
                const url = `/edit-task/${taskId}`;
                $.ajax({
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    url: url,
                    data: JSON.stringify(formData),
                    dataType: "json",
                    beforeSend(){},
                    success: function(data){
                        if(data.err){
                            $('#response-message').html(data.err).addClass('error').removeClass('success');
                            return;
                        }
                        $('#response-message').html(`Edited Task ${data.res.title}`).addClass('success').removeClass('error');
                        let newTask = compileTask(data.res.id, data.res.title, data.res.description, data.res.priority);
                        $(`#task-row-${taskId}`).replaceWith(newTask);
                        closeForms();
                    },
                    error: function(xhr, status, err){
                        let errorMessage = "An error occurred. ";
                        if(xhr.responseJSON) errorMessage += xhr.responseJSON;
                        if(xhr.responseText) errorMessage += xhr.responseText;
                        $('#response-message').html(errorMessage).addClass('error').removeClass('success');
                    }
                });
            });

            $(document).on('submit', '.delete-form', function (e){
                e.preventDefault();
                const taskId = $(this).data('task-id');
                const url = `/delete-task/${taskId}`;
                $.ajax({
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    url: url,
                    data: JSON.stringify({ id: taskId }),
                    dataType: "json",
                    beforeSend(){},
                    success: function(data){
                        if(data.err){
                            $('#response-message').html(data.err).addClass('error').removeClass('success');
                            return;
                        }
                        $('#response-message').html(`Deleted Task ${data.res.title}`).addClass('success').removeClass('error');
                        $(`#task-row-${taskId}`).remove();
                        closeForms();
                    },
                    error: function(xhr, status, err){
                        let errorMessage = "An error occurred. ";
                        if(xhr.responseJSON) errorMessage += xhr.responseJSON;
                        if(xhr.responseText) errorMessage += xhr.responseText;
                        $('#response-message').html(errorMessage).addClass('error').removeClass('success');
                    }
                });
            });

            $(document).on('submit', '.toggle-form', function (e){
                e.preventDefault();
                const taskId = $(this).data('task-id');
                const url = `/toggle-task/${taskId}`;
                $.ajax({
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    data: JSON.stringify({ id: taskId }),
                    dataType: "json",
                    url: url,
                    beforeSend(){},
                    success: function(data){
                        if(data.err){
                            $('#response-message').html(data.err).addClass('error').removeClass('success');
                            return;
                        }

                        $('#response-message').html(`Updated task ${data.res.title}`).addClass('success').removeClass('error');
                        let status = "Completed";
                        if(data.res.completed != true){
                            status = "Pending";
                        }
                        $(`#task-row-${taskId}`).toggleClass('strike').find('.compen').text(status);
                        closeForms();
                    },
                    error: function(xhr, status, error) {
                        let errorMessage = "An error occurred. ";
                        if(xhr.responseJSON) errorMessage += xhr.responseJSON;
                        if(xhr.responseText) errorMessage += xhr.responseText;
                        $('#response-message').html(errorMessage).addClass('error').removeClass('success');
                    }
                });
            });
        });
    </script>
</body>
</html>

